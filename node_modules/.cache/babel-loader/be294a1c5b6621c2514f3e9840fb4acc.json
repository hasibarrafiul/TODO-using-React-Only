{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactPractice\\\\reactPractice\\\\practice\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SendIcon from '@mui/icons-material/Send';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [pk, setPk] = useState(0);\n  const [todo, setTodo] = useState([]);\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('todo')) !== null) {\n      let todoJson = JSON.parse(localStorage.getItem('todo'));\n      setTodo(todoJson);\n      let max = 0;\n      todoJson.map(item => {\n        if (item.id > max) {\n          max = item.id;\n        }\n      });\n      setPk(max + 1);\n    }\n  }, []);\n\n  const inputAddToTodo = () => {\n    setTodo([...todo, {\n      id: pk,\n      todos: input\n    }]);\n    setPk(pk + 1);\n  };\n\n  const removeFromTodo = id => {\n    setTodo(val => val.filter(e => {\n      return e.id !== id;\n    }));\n  };\n\n  const save = () => {\n    var data = JSON.stringify(todo);\n    localStorage.setItem('todo', data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: 360,\n      bgcolor: 'background.paper'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"main mailbox folders\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 44\n        }, this),\n        onClick: () => inputAddToTodo(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), todo.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              disablePadding: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: val.todos\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 51\n                    }, this),\n                    onClick: () => removeFromTodo(val.id),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 16\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        endIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 44\n        }, this),\n        onClick: () => save(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hKLNcTLtAWLGE8wuwdrVTSg324c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","React","Box","List","ListItem","ListItemButton","ListItemIcon","ListItemText","Divider","Button","DeleteIcon","SendIcon","SaveIcon","App","input","setInput","pk","setPk","todo","setTodo","JSON","parse","localStorage","getItem","todoJson","max","map","item","id","inputAddToTodo","todos","removeFromTodo","val","filter","e","save","data","stringify","setItem","width","maxWidth","bgcolor","target","value"],"sources":["E:/reactPractice/reactPractice/practice/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SendIcon from '@mui/icons-material/Send';\nimport SaveIcon from '@mui/icons-material/Save';\n\nfunction App() {\n  const [input, setInput] = useState('')\n  const [pk, setPk] = useState(0)\n  const [todo, setTodo] = useState([])\n\n  useEffect(() =>{\n    if(JSON.parse(localStorage.getItem('todo'))!==null){\n      let todoJson = JSON.parse(localStorage.getItem('todo'))\n      setTodo(todoJson)\n      let max = 0\n      todoJson.map(item => {\n        if(item.id > max){\n          max = item.id\n        }\n      })\n      setPk(max+1)\n    }\n  },[]);\n\n  const inputAddToTodo = () =>{\n      setTodo([...todo, {id: pk, todos: input}])\n      setPk(pk+1)\n      \n  }\n\n  const removeFromTodo = (id) =>{\n    setTodo(val =>\n      val.filter(e => {\n        return e.id !== id;\n      }),\n    );\n  }\n  \n  const save = () => {\n    var data = JSON.stringify(todo);\n    localStorage.setItem('todo', data);\n  }\n\n  return (\n    <Box sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n      <nav aria-label=\"main mailbox folders\">\n      <h1>Todo</h1>\n      <input type=\"text\"  onChange={(e) => {setInput(e.target.value)}}/>\n      <br></br>\n      <Button variant=\"contained\" endIcon={<SendIcon />} onClick={()=>inputAddToTodo()}>Submit</Button>\n      <h1>Tasks</h1>\n      {todo.map((val) => {\n        return <div>\n          <List>\n        <ListItem disablePadding>\n          <ListItemButton>\n          <ListItemText primary={val.todos} />\n            <ListItemIcon>\n            <Button variant=\"outlined\" startIcon={<DeleteIcon />} onClick={()=>removeFromTodo(val.id)}>Remove</Button>\n            </ListItemIcon>\n          </ListItemButton>\n          \n        </ListItem>\n        <Divider/>\n      </List>\n        </div>\n      })}\n      <Button variant=\"contained\" endIcon={<SaveIcon />} onClick={()=> save()}>Save</Button>\n    </nav>\n    </Box>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}